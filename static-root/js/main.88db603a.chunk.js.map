{"version":3,"sources":["App.js","reportWebVitals.js","serviceWorker.js","lookup/components.js","builder/builds.js","builder/lookup.js","builder/components.js","icons/logos/Logo.png","main_pages/components.js","icons/logos/Logo-white-text.png","navbar/navbar.js","index.js"],"names":["App","className","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","indexOf","onerror","e","send","BuildList","useState","builds","setBuilds","buildsDidSet","setBuildsDidSet","useEffect","alert","map","item","index","BuildListItem","build","props","Card","border","Header","build_title","Body","Title","vehicle_info","Text","budget","Button","variant","onClick","event","preventDefault","id","BuildListComponent","LandingPage","class","src","logo","alt","style","justifyContent","alignItems","marginBottom","display","navbar","Navbar","collapseOnSelect","expand","Container","Brand","Toggle","Collapse","Nav","NavDropdown","title","Item","Link","appEl","getElementById","ReactDOM","render","React","createElement","querySelectorAll","forEach","container","dataset","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.88db603a.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}","import React, {useEffect, useState}  from 'react'\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport { apiBuildList } from './lookup'\r\n\r\nexport function BuildList() {\r\n    const [builds, setBuilds] = useState([])\r\n    const [buildsDidSet, setBuildsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        if (buildsDidSet === false) {\r\n            const handleBuildListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setBuilds(response)\r\n                    setBuildsDidSet(true)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }  \r\n            apiBuildList(handleBuildListLookup)\r\n        }\r\n    }, [buildsDidSet, setBuildsDidSet])\r\n\r\n    return <div>\r\n        {builds.map((item, index)=> {return <BuildListItem build={item} key={`${index}-{item.id}`} />})}\r\n    </div>\r\n}\r\n\r\nexport function BuildListItem(props) {\r\n    const {build} = props\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `build/${build.id}/components/`\r\n    }\r\n    return <div className='mt-3'>\r\n        <Card border=\"salmon\">\r\n        <Card.Header >{build.build_title}</Card.Header>\r\n        <Card.Body>\r\n            <Card.Title>{build.vehicle_info}</Card.Title>\r\n            <Card.Text>\r\n                Budget: ${build.budget}\r\n            </Card.Text>\r\n            <Button variant='bluegreen' onClick={handleLink}>View Build</Button>\r\n        </Card.Body>\r\n        </Card>\r\n    </div>\r\n}","import {backendLookup} from '../lookup'\r\n\r\n\r\nexport function apiBuildCreate(newBuild, callback) {\r\n    backendLookup(\"POST\", '/build/create/', callback, newBuild)\r\n}\r\n\r\nexport function apiBuildList(callback) {\r\n    backendLookup(\"GET\", '/build/list/', callback)\r\n}\r\n\r\nexport function apiBuildSelect(Build, callback) {\r\n    backendLookup(\"POST\", '/build/select/', callback, Build)\r\n}\r\n\r\nexport function apiVehicleList(callback) {\r\n    backendLookup(\"GET\", '/build/vehicles/', callback)\r\n}\r\n\r\nexport function apiVehicleDetail(van_id, callback) {\r\n    backendLookup(\"GET\", `/build/vehicles/${van_id}/`, callback)\r\n}\r\n\r\nexport function apiVehicleSelect(Vehicle, callback) {\r\n    backendLookup(\"POST\", '/build/vehicles/select/', callback, Vehicle)\r\n}","import React, {useEffect, useState}  from 'react'\r\nimport { BuildList } from './builds'\r\n\r\n\r\nexport function BuildListComponent(props) {\r\n    return <div className={props.className}>\r\n        <BuildList {...props} />\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/Logo.20f1e702.png\";","import React from 'react'\r\nimport logo from '../icons/logos/Logo.png'\r\n\r\nexport function LandingPage(props) {\r\n    const handleBuilds = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `builds`\r\n    }\r\n    const handleLogin = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `login`\r\n    }\r\n    return <div className='centered'>\r\n        <div class='row-10'>\r\n            <div> \r\n                <img src={logo} alt=\"logo\" style={{justifyContent:'end', alignItems:'center', marginBottom: 50}} />\r\n            </div>\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', marginBottom: 15}}> \r\n                <div class='butt outline-darkgreen' onClick={handleBuilds} >Start Building</div>\r\n            </div>\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', marginBottom: 15}}> \r\n                <div class='butt outline-darkgreen' onClick={handleLogin} >Login / Signup</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/Logo-white-text.2e65ba81.png\";","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport logo from '../icons/logos/Logo-white-text.png'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nexport function navbar() {\r\n  \r\n  return <Navbar collapseOnSelect expand=\"lg\" variant='dark'>\r\n    <Container>\r\n      <Navbar.Brand href=\"#home\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\" >\r\n          <NavDropdown title=\"Build\" id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#builds\">Your Builds</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#vans\">Vans</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#components\">Components</NavDropdown.Item>\r\n          </NavDropdown>\r\n          <NavDropdown title=\"About\" id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#about\">About</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#contact\">Contact</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#donate\">Donate</NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Nav.Link href=\"#login\">Login / Signup</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './custom.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BuildListComponent } from './builder'\nimport { LandingPage } from './main_pages';\nimport { navbar } from './navbar'\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement\n\n// navbar element\nconst navBarEl = document.querySelectorAll(\".navbar\")\nnavBarEl.forEach(container=> {\n    ReactDOM.render(\n        e(navbar, container.dataset), container);\n})\n\n// landing page component\nconst landingEl = document.querySelectorAll(\".landing-page\")\nlandingEl.forEach(container=> {\n    ReactDOM.render(\n        e(LandingPage, container.dataset), container);\n})\n\nconst BuildListEl = document.querySelectorAll('.build-list')\nBuildListEl.forEach(container=> {\n    ReactDOM.render(\n        e(BuildListComponent, container.dataset), container);\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.unregister();\n"],"sourceRoot":""}